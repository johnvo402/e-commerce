@model IndexViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
    var roles = await UserManager.GetRolesAsync(user);
}

@if (roles.Contains("Administrator"))
{
    Layout = "Admin/_AdminLayout";
}
else
{
    Layout = "_LayoutHome";
}
@{
    ViewData["Title"] = "Your Account Management";
}



<div class="container">
    <h1>@ViewData["Title"].</h1>
    <p class="text-success">@ViewData["StatusMessage"]</p>
    <h4>Update Account Information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-4">
            Basic Information:
            <div class="d-flex justify-content-around align-content-around">

                <div class="text-center">
                    <div class="avatar-profile" style="max-height: 150px;max-width: 150px;">
                        <img style="width: 100%;" src="/images/icons/@Html.DisplayFor(m => Model.profile.Avt)" alt="Avatar" class="rounded-circle img-fluid">
                    </div>
                    <a class="btn-sm btn-danger mt-5 text-sm-center" href="/uploadavt">Change Avatar</a>
                </div>


            </div>
        </dt>
        <dd class="col-sm-6">
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(m => Model.profile.UserName)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(m => Model.profile.UserName)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(m => Model.profile.FullName)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(m => Model.profile.FullName)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(m => Model.profile.UserEmail)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(m => Model.profile.UserEmail)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(m => Model.profile.PhoneNumber)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(m => Model.profile.PhoneNumber)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(m => Model.profile.HomeAdress)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(m => Model.profile.HomeAdress)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(m => Model.profile.BirthDate)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(m => Model.profile.BirthDate)
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-6">
                    @Html.DisplayNameFor(m => Model.profile.Gender)
                </dt>

                @if (Model.profile.Gender == 1)
                {
                    <dd class="col-sm-6">
                        Male
                    </dd>
                }
                else
                {
                    <dd class="col-sm-6">
                        Female
                    </dd>
                }


            </dl>
            <a asp-action="EditProfile" class="btn btn-primary btn-sm">Edit</a>

        </dd>

        <dt class="col-sm-4">Password:</dt>
        <dd class="col-sm-6">
            @if (Model.HasPassword)
            {
                <a asp-controller="Manage" asp-action="ChangePassword">Change Password</a>
            }
            else
            {
                <a asp-controller="Manage" asp-action="SetPassword">Set Password</a>
            }
        </dd>
        <dt class="col-sm-4">External Account Linking:</dt>
        <dd class="col-sm-6">
            There are @Model.Logins.Count linked accounts. <a asp-controller="Manage" asp-action="ManageLogins">Manage External Logins</a>
        </dd>

        <dt class="col-sm-4">Phone Number:</dt>
        <dd class="col-sm-6">
            <p>
                Phone number used for two-factor authentication
            </p>
            @(Model.PhoneNumber ?? "No phone number associated.")
            @if (Model.PhoneNumber != null)
            {
                <text>:</text>
                <text>&nbsp;&nbsp;<a asp-controller="Manage" asp-action="AddPhoneNumber">Change</a>&nbsp;&nbsp;</text>
                <form asp-controller="Manage" asp-action="RemovePhoneNumber" method="post" role="form">
                    <button type="submit" class="btn btn-danger btn-sm">Remove Phone Number</button>
                </form>
            }
            else
            {
                <text>&nbsp;&nbsp;<a asp-controller="Manage" asp-action="AddPhoneNumber">Add Phone Number</a></text>
            }
        </dd>

        <dt class="col-sm-4">Two-Factor Authentication:</dt>
        <dd class="col-sm-6">
            @if (Model.TwoFactor)
            {
                <form asp-controller="Manage" asp-action="DisableTwoFactorAuthentication" method="post" class="form-horizontal" role="form">
                    (Enabled) <button type="submit" class="btn btn-danger btn-sm">Disable</button>
                </form>
            }
            else
            {
                <form asp-controller="Manage" asp-action="EnableTwoFactorAuthentication" method="post" class="form-horizontal" role="form">
                    <button type="submit" class="btn btn-primary btn-sm">Enable</button>
                </form>
            }
        </dd>

        <dt class="col-sm-4">App Authenticator:</dt>
        <dd class="col-sm-6">
            @if (Model.AuthenticatorKey == null)
            {
                <form asp-controller="Manage" asp-action="ResetAuthenticatorKey" method="post" class="form-horizontal" role="form">
                    <button type="submit" class="btn btn-sm btn-primary">Generate Code</button>
                </form>
            }
            else
            {
                <text>Authenticator code is: @Model.AuthenticatorKey</text>
                <p>Enter this code when prompted for two-factor authentication</p>
                <form asp-controller="Manage" asp-action="GenerateRecoveryCode" method="post" class="form-horizontal" role="form">
                    <button type="submit" class="btn btn-sm btn-primary">Generate Recovery Code</button>
                    <p>Recovery codes are used for two-factor authentication</p>
                </form>
            }
        </dd>

        @if (roles.Contains("RequestSeller") && !roles.Contains("Administrator"))
        {
            <dt class="col-sm-4">Request Sale:</dt>
            <dd class="col-sm-6">
                <p>Waiting for confirmation from Admin</p>
                <form asp-controller="Manage" asp-action="CancelRegisterSeller" method="post" class="form-horizontal" role="form">
                    <button type="submit" class="btn btn-sm btn-primary">Cancel Register</button>
                </form>
            </dd>
        }
        else if (!roles.Contains("Seller") && !roles.Contains("Administrator"))
        {
            <dt class="col-sm-4">Request Sale:</dt>
            <dd class="col-sm-6">

                <form asp-controller="Manage" asp-action="RegisterSeller" method="post" class="form-horizontal" role="form">
                    <button type="submit" class="btn btn-sm btn-primary">Register Sale</button>

                </form>
            </dd>
        }

    </dl>
</div>
